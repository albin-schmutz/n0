MODULE PrimeNumbers;

IMPORT Buffer, Integer, Print;

VAR

  p : ARRAY 400 OF INTEGER;
  v : ARRAY 20 OF INTEGER;


PROCEDURE Primes(n : INTEGER);

  VAR

    out : Buffer.Rec;
    i : INTEGER; k : INTEGER; m : INTEGER; x : INTEGER;
    inc : INTEGER;lim : INTEGER; sqr : INTEGER; prim: BOOLEAN;

  BEGIN
    Buffer.Reset(out); Buffer.PutChar(out, 0AX);
    x := 1; inc := 4; lim := 1; sqr := 4; m := 0; i := 3;
    WHILE i <= n DO
      REPEAT
        x := x + inc; inc := 6 - inc;
        IF sqr <= x THEN  (* sqr = p[lim]^2 *)
          v[lim] := sqr; lim := lim + 1; sqr := p[lim] * p[lim]
        END ;
        k := 2; prim := TRUE;
        WHILE prim & (k < lim) DO
          k := k + 1;
          IF v[k] < x THEN v[k] := v[k] + p[k] END;
          prim := x # v[k]
        END
      UNTIL prim;
      p[i] := x; Integer.Put(out, x);
      IF m = 19 THEN
        Buffer.PutChar(out, 0AX); m := 0
      ELSE
        Buffer.PutChar(out, 20X); m := m + 1
      END;
      Print.ToOut(out);
      i := i + 1
    END
  END Primes;


BEGIN
  Primes(100)
END PrimeNumbers.
